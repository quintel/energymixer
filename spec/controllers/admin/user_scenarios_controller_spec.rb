require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe Admin::UserScenariosController do
  render_views

  before do
    @user_scenario = Factory :user_scenario
  end

  describe "GET index" do
    it "assigns all user_scenarios as @user_scenarios" do
      get :index
      response.should be_success
    end
  end

  describe "GET show" do
    it "assigns the requested user_scenario as @user_scenario" do
      get :show, :id => @user_scenario.id
      assigns(:user_scenario).should == @user_scenario
      response.should be_success
    end

    it "should handle gracefully a missing record" do
      get :show, :id => 'foobar'
      response.should be_redirect      
    end
  end

  describe "GET new" do
    it "assigns a new user_scenario as @user_scenario" do
      get :new
      response.should be_success
    end
  end

  describe "GET edit" do
    it "shows the edit user_scenario form" do
      get :edit, :id => @user_scenario.id
      assigns(:user_scenario).should == @user_scenario
      response.should render_template('edit')
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "creates a new user_scenario" do
        lambda {
          post :create, :user_scenario => Factory.attributes_for(:user_scenario)
          response.should redirect_to(admin_user_scenario_url(assigns(:user_scenario)))
        }.should change(UserScenario, :count)
      end
    end

    describe "with invalid params" do
      it "should show the form again" do
        post :create, :user_scenario => { :name => '' }
        response.should render_template('new')
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested user_scenario" do
        put :update, :id => @user_scenario.id, :user_scenario => Factory.attributes_for(:user_scenario)
        response.should redirect_to(admin_user_scenario_url(@user_scenario))
      end
    end

    describe "with invalid params" do
      it "re-renders the 'edit' template" do
        put :update, :id => @user_scenario.id, :user_scenario => { :name => '' }
        response.should render_template('edit')
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested user_scenario" do
      lambda {
        delete :destroy, :id => @user_scenario.id
        response.should redirect_to(admin_user_scenarios_url)
      }.should change(UserScenario, :count)
    end
  end
end
