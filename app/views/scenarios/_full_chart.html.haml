:ruby
  max_height = 360
  width      = 86 # TODO: move to CSS
  max_amount = local_assigns.has_key?(:max_amount) ? max_amount : Scenario::MaxAmount
  current_chart_height = Math.sqrt(scenario.total_amount / max_amount.to_f) * max_height
.full_chart.shaded_gradient
  %header.header_blue
    - scenario_year = scenario.current_scenario? ? 2011 : scenario.year || @end_year
    - if scenario.name
      = t 'chart.header.scenario_name', :name => scenario.name, :year => scenario_year
    - else
      = t 'chart.header.your_scenario', :year => scenario_year
  %section.chart
    %header.subheader_blue.shaded_gradient
      = raw t 'chart.header.total_costs', :amount => number_with_precision(scenario.total_amount / 1_000_000_000, :precision => 1, :separator => ".")
    .charts_container
      .legend
        %h4= t 'chart.legend'
        %table
          - scenario.carrier_ratios.each_pair do |carrier, value|
            %tr{:class => [carrier, Scenario::PrimaryTable[carrier]]} 
              %td= image_tag "layout/textures/#{carrier}.png"
              %td= t(carrier)
              %td.value= number_to_percentage(value * 100, :precision => 0)
          
      .chart_canvas_mix{:style=>"width: #{width}px;"}
        %ul.chart
          - scenario.carrier_ratios.each_pair do |carrier, ratio|
            - height = ratio * current_chart_height
            %li.serie{:class => [carrier, Scenario::PrimaryTable[carrier]], :style => "height: #{height}px", :title => I18n.t(carrier)}
      = render 'renewables_float', :scenario => scenario    

  %section.boxes
    %header.subheader_blue.shaded_gradient
      - if APP_CONFIG["score"]
        = render 'score_box', :scenario => scenario
      - else 
        Effect
    - Scenario::DashboardTable.each_pair do |key, gquery|
      - output = output_for_dashboard_item(key)
      .dashboard_item{:id => gquery}
        .gauge_icon{:class => set_class_for_output(output, scenario.send(output))}
        .info_icon
          = image_tag('icons/i.png')
        %h3= t "dashboard.#{key}.title"
        .value= format_dashboard_value output, scenario.send(output)
        .popup.shaded_gradient
          = link_to image_tag('icons/close.png'), '#', :class => 'close_popup'
          .title= t "dashboard.#{key}.title"
          .text= t "dashboard.#{key}.text"
  .clear
        
        
        
        
