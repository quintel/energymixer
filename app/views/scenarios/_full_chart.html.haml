:ruby
  max_height = 360
  width      = 86
  max_amount = local_assigns.has_key?(:max_amount) ? max_amount : Scenario::MaxAmount
  current_chart_height = Math.sqrt(scenario.total_amount / max_amount.to_f) * max_height
  dashboard_items = {
    output_5: {
      gquery: "mixer_reduction_of_co2_emissions_versus_1990",
      title: "Verandering CO2-uitstoot",
      text: "Hoe verandert de CO2-uitstoot als gevolg van je keuzes? Hier staat de verandering ten opzichte van de uitstoot in 1990."
    },
    output_6: {
      gquery: "mixer_renewability",
      title: "Hernieuwbare energie",
      text: "Welk deel van het toekomstige energiegebruik is hernieuwbaar? We gebruiken hier de Europese definitie van hernieuwbare energie. Dat betekent dat we kijken welk percentage van het eindgebruik hernieuwbaar is."
    },
    output_7: {
      gquery: "mixer_bio_footprint",
      title: "Bio-voetafdruk",
      text: "Hoeveel landbouwoppervlak is er nodig als gevolg van je keuzes? Biomassa moet vaak geteeld worden. Hier zie je hoeveel keer het Nederlandse landbouwareaal nodig is om dat te doen."
    },
    output_8: {
      gquery: "mixer_net_energy_import",
      title: "Import afhankelijkheid",
      text: "Hoeveel energie importeert Nederland uit het buitenland als gevolg van je keuzes? Hier staat welk percentage van alle gebruikte energie er geÃ¯mporteert wordt, na aftrek van de hoeveelheid energie die Nederland exporteert. De Nederlandse gasvoorraden nemen af, en dus neemt de import geleidelijk aan toe."
    }
  }
.full_chart.shaded_gradient
  %header.header_blue
    - if scenario.name
      #{scenario.name} - 
    - else
      Jouw
    Energy Mix van #{scenario.current_scenario? ? 2011 : scenario.year || @end_year}
  %section.chart
    %header.subheader_blue.shaded_gradient
      Kosten &euro;
      %span.total_amount 
        = number_with_precision(scenario.total_amount / 1_000_000_000, :precision => 1, :separator => ".")
      Miljard    
    .charts_container
      .legend
        %h4 Legenda
        %table
          - scenario.carrier_ratios.each_pair do |carrier, value|
            -# TODO: CLEAN UP: NOT SEPERATE INTERPOLATION HERE, BUT SCENARIO::PRIMARYMIXTABLE, OR SOMETHING... DS Tue Sep 27 14:30:43 CEST 2011
            %tr{:class => [carrier, "share_of_total_costs_assigned_to_#{carrier}"]} 
              %td= image_tag "layout/textures/#{carrier}.png"
              %td= t(carrier)
              %td.value= number_to_percentage(value * 100, :precision => 0)
          
      .chart_canvas_mix{:style=>"width: #{width}px;"}
        %ul.chart
          - scenario.carrier_ratios.each_pair do |carrier, ratio|
            - height = ratio * current_chart_height
            %li.serie{:class => [carrier, Scenario::PrimaryMixTable[carrier]], :style => "height: #{height}px", :title => I18n.t(carrier)}
      = render 'renewables_float', :scenario => scenario    

  %section.boxes
    %header.subheader_blue.shaded_gradient
      - if APP_CONFIG["score"]
        = render 'score_box', :scenario => scenario
      - else 
        Effect
    - dashboard_items.each_pair do |output, item|
      .dashboard_item{:id => item[:gquery]}
        .gauge_icon{:class => set_class_for_output(output, scenario.send(output))}
        .info_icon
          = image_tag('icons/i.png')
        %h3= raw t(dashboard_label_for_output(output))
        .value= format_dashboard_value output, scenario.send(output)
        .popup.shaded_gradient
          = link_to image_tag('icons/close.png'), '#', :class => 'close_popup'
          .title= item[:title]
          .text= item[:text]
  .clear
        
        
        
        
