:ruby
  max_height = local_assigns.has_key?(:max_height) ? max_height : 360
  width      = local_assigns.has_key?(:width) ? width : 80
  max_amount = local_assigns.has_key?(:max_amount) ? max_amount : Scenario::MaxAmount
  rounded_sum = 0
  current_chart_height = scenario.total_amount / max_amount.to_f * max_height
  dashboard_items = {
    output_5: "co2_emission_percent_change_from_1990_corrected_for_electricity_import",
    output_6: "share_of_renewable_energy",
    output_7: "area_footprint_per_nl",
    output_8: "energy_dependence",
  }
.full_chart
  %header
    - if scenario.name
      #{scenario.name} - 
    - else
      Uw
    Energy Mix van #{END_YEAR}
  %section.chart
    %header
      Kosten &euro;
      %span.total_amount 
        = number_with_precision(scenario.total_amount, :precision => 1, :separator => ".")
      Miljard    
    .charts_container
      .chart_canvas_mix{:style=>"width: #{width}px;"}
        %ul.chart
          - scenario.carriers.each_pair do |key, v|
            - height = (v[:ratio] * current_chart_height).round
            - rounded_sum += height
            - label_hidden = height <= 10
            %li.serie{:class => [key, Scenario::PrimaryMixTable[key]], :style => "height: #{height}px", :title => I18n.t(key)}
              %span.label{:class => label_hidden && 'hidden'}= I18n.t(key)
      .renewables_float
        %h3 Hernieuwbaar
        %ul.chart
          - scenario.renewable_carriers.each_pair do |key, v|
            - height = v[:relative_ratio] * 200
            %li.serie{:class => [key, Scenario::SecondaryMixTable[key]], :style => "height: #{height}px", :title => I18n.t(key)}
              %span.label{:class => height <= 5 ? 'hidden' : ''}= I18n.t(key)
  %section.boxes
    %header Effect
    - dashboard_items.each_pair do |o, gquery|
      .dashboard_item{:id => gquery, :class => set_class_for_output(o, scenario.send(o))}
        .info_icon
          = image_tag('icons/i.png')
        %h3= raw t(dashboard_label_for_output(o))
        .value= format_dashboard_value o, scenario.send(o)
  .clear
