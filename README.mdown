## Configuration

Check `~/config_files/config.yml`.

	app_name: "gasmixer" # if you define a new key here then add the translation in `en.yml` and `nl.yml`
	score: true
	api_base_path:      "http://etengine.dev/api/v2"
	view_scenario_path: "http://etmodel.dev/scenarios"
	max_total_cost: 115000000000 # max height of the scenario column
	api_session_settings:
	  :country: 'nl'
	  :end_year: 2025
  

bladiebla

## Deployment

Currently we have three running instances of the application

### mixer.et-model.com

Instance embeded as iframe on shell

End Year: 2025

### gasmixer.et-model.com

End Year: 2030

### mixer2050.et-model.com

End Year: 2050


To deploy run

	cap XXXXX deploy

`XXXXX` might be `shell`, `gasmixer` or `mixer2050`


Be careful with configuration data: `settings.yml` and `config.yml` are stored in `~/config_files` and 
capistrano takes care of copying them to the application config directory.

## Caching

The application caches the current scenario. To clear the cache run
`/home/ubuntu/clear_rails_cache.sh`. There's a cron job that does this
every night.

If we're using the default rails MemoryStore as backend we're actually just
touching `tmp/restart.txt`, because it saves everything into the memory
of the same process.

When we will be using a shared cache (memcached, etc) we have to call
`Rails.cache.clear`, too.

The Scenario class has two methods related to this cache: `Scenario.current`
(cached) and `Scenario.current!` (forces reload).

As a reference, this is the current script:

  #!/bin/sh
  cd /home/ubuntu/apps/energymixer/current
  # /usr/bin/env rake scenarios:clear_cache RAILS_ENV=production
  # If we're using MemoryStore this is enough
  touch tmp/restart.txt
 
## Themes

The `theming.rb` initializer will prepend `app/views/APP_NAME` to the rendering view path. This means
that any view (including layouts) in that directory will be rendered if available. Otherwise the default
view will be used.
